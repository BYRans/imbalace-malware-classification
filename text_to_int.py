from operator import itemgetter
from collections import Counter
import time
import os
import json

def get_words_list(filename):
    try:
        with open(filename) as f_obj:
            content = f_obj.read()
    except FileNotFoundError:
        msg = "The file " + filename + " does not exist."
        print(msg)
    else:
        content = content.replace(',', ' ')
        # content = content.replace("'", ' ')
        # content = content.replace('!', ' ')
        # content = content.replace('-', ' ')
        # content = content.replace('_', ' ')
        # content = content.replace('(', ' ')
        # content = content.replace(')', ' ')
        words = [word for word in content.split()]
        return words


def count_results(raw_data_path):
    words_count_total = {}

    allFileNames = sorted(os.listdir(raw_data_path))
    allFileNames = [f_name for f_name in allFileNames if f_name.endswith('.txt')]

    filesCount = len(allFileNames)
    print("text files count is: ",filesCount)

    count=0
    for filename in allFileNames:
        if (count % 100) == 0:
            print("text progressed: ",count,"/",filesCount)
            print("The number of words has reached: ",len(words_count_total))
        count += 1
        words_list = get_words_list(raw_data_path + filename)
        for word in words_list:
            if word not in words_count_total:
                words_count_total[word] = 1
            else:
                words_count_total[word] += 1
    return words_count_total



def get_text_dic(raw_data_path,text_word_index_fname):
    words_count_total = count_results(raw_data_path)
    # sorted method Return a new list
    words_count_total_list = sorted(words_count_total.items(), key=itemgetter(1), reverse=True)
    text_word_count_fname = 'G:/数据集/Microsoft/RunningOutput/wordDic/text_word_count.json'

    for word, count in words_count_total_list[:10]:
        print(word, "----", count)

    with open(text_word_count_fname, 'w') as json_file:
        json.dump(words_count_total_list, json_file, ensure_ascii=False)
    print("operations index dictionary create success! Dic file saved in ", text_word_count_fname)
    print("The number of words is: ", len(words_count_total_list))

    words_index_dic = {}
    for i, (word, count) in enumerate(words_count_total_list):
        words_index_dic[word] = i + 1

    with open(text_word_index_fname, 'w') as json_file:
        json.dump(words_index_dic, json_file, ensure_ascii=False)

    count = 0
    for (word, index) in words_index_dic.items():
        count += 1
        if count > 10:
            break
        print(word, "----", index)


def text_to_int(raw_data_path,text_word_index_fname):
    int_text_path = 'G:/数据集/Microsoft/RunningOutput/int_text/'
    with open(text_word_index_fname, 'r') as fileR:
        print("Loading dic...")
        operation_dic = json.load(fileR)
        fileR.close()
        print("the total word index count is:", len(operation_dic))

    allFileNames = sorted(os.listdir(raw_data_path))
    allFileNames = [f_name for f_name in allFileNames if f_name.endswith('.txt')]

    file_count = len(allFileNames)
    count = 0
    # read in each file and puts its contents into an element of xs
    for f_name in allFileNames:
        if (count % 100) == 0:
            print("text to int: ",count,"/",file_count)
        count += 1
        int_text = []
        words = get_words_list(raw_data_path + f_name)
        for word in words:
            int_text.append(str(operation_dic[word]))
        fw = open(int_text_path + f_name[:-4] + 'Numbers.txt', 'w', encoding='utf-8')
        int_text_str = " ".join(int_text)
        fw.write(int_text_str)
        fw.close()



if __name__ == '__main__':
    text_word_index_fname = 'G:/数据集/Microsoft/RunningOutput/wordDic/text_word_index.json'
    raw_data_path = 'G:/数据集/Microsoft/RunningOutput/text/'
    # get_text_dic(raw_data_path,text_word_index_fname)
    text_to_int(raw_data_path,text_word_index_fname)


