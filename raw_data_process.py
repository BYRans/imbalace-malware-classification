from operator import itemgetter
from collections import Counter
import time
import os
import json
import re
import string


def get_words_list(filename):
    content = []
    with open(filename,encoding='latin-1') as f_obj:
        for line in f_obj:
            line = line.replace('??', '')
            line = line.replace(',', ' ')
            line = line.replace('+', '')
            line = line.replace('\t', ' ')
            line = line.split(" ")
            if(len(line) == 1):
                continue
            line = " ".join(line[1:])
            line = line.split(";")
            if(len(line) > 1):
                line = line[0:-1]
            line = " ".join(line)
            content.append(line.strip())
    f_obj.close()
    content = " ".join(content)
    words = [word for word in content.split()]
    return words

def get_hex_test(raw_data_path):
    hex_text_path = 'G:/数据集/Microsoft/RunningOutput/hex_text/'

    allFileNames = sorted(os.listdir(raw_data_path))
    allFileNames = [f_name for f_name in allFileNames if f_name.endswith('.asm')]

    file_count = len(allFileNames)
    print(file_count)
    count = 0
    for f_name in allFileNames:
        if (count % 100) == 0:
            print("hex to int: ",count,"/",file_count)
        count += 1
        words = get_words_list(raw_data_path + f_name)
        fw = open(hex_text_path + f_name[:-4] + 'hex_text.txt', 'w', encoding='utf-8')
        hex_text_str = " ".join(words)
        fw.write(hex_text_str)
        fw.close()

def count_results(raw_data_path):
    words_count_total = {}
    allFileNames = sorted(os.listdir(raw_data_path))
    allFileNames = [f_name for f_name in allFileNames if f_name.endswith('.txt')]
    filesCount = len(allFileNames)
    print("text files count is: ",filesCount)
    count=0
    for filename in allFileNames:
        if (count % 100) == 0:
            print("text progressed: ",count,"/",filesCount)
            print("The number of words has reached: ",len(words_count_total))
        count += 1
        words_list = get_words_list(raw_data_path + filename)
        for word in words_list:
            if word not in words_count_total:
                words_count_total[word] = 1
            else:
                words_count_total[word] += 1
    return words_count_total

def get_text_dic(hex_text_path,index_path):
    words_count_total = count_results(hex_text_path)
    # sorted method Return a new list
    words_count_total_list = sorted(words_count_total.items(), key=itemgetter(1), reverse=True)
    text_word_count_fname = 'G:/数据集/Microsoft/RunningOutput/wordDic/hex_text_word_count.json'

    for word, count in words_count_total_list[:10]:
        print(word, "----", count)

    with open(text_word_count_fname, 'w',encoding='latin-1') as json_file:
        json.dump(words_count_total_list, json_file, ensure_ascii=True)
    print("operations index dictionary create success! Dic file saved in ", text_word_count_fname)
    print("The number of words is: ", len(words_count_total_list))

    words_index_dic = {}
    for i, (word, count) in enumerate(words_count_total_list):
        words_index_dic[word] = i + 1

    with open(index_path, 'w',encoding='latin-1') as json_file:
        json.dump(words_index_dic, json_file, ensure_ascii=True)

    count = 0
    for (word, index) in words_index_dic.items():
        count += 1
        if count > 10:
            break
        print(word, "----", index)

def hex_text_to_int(raw_data_path,index_path):
    int_hex_text_path = 'G:/数据集/Microsoft/RunningOutput/int_hex_text_all/'
    with open(index_path, 'r') as fileR:
        print("Loading dic...")
        operation_dic = json.load(fileR)
        fileR.close()
        print("the total word index count is:", len(operation_dic))

    allFileNames = sorted(os.listdir(raw_data_path))
    allFileNames = [f_name for f_name in allFileNames if f_name.endswith('.txt')]

    file_count = len(allFileNames)
    count = 0
    # read in each file and puts its contents into an element of xs
    for f_name in allFileNames:
        if (count % 100) == 0:
            print("text to int: ",count,"/",file_count)
        count += 1
        int_text = []
        words = get_words_list(raw_data_path + f_name)
        for word in words:
            if len(int_text) > 20000:
                break
            tmp_int = operation_dic[word]
            int_text.append(str(tmp_int))
        fw = open(int_hex_text_path + f_name[:-4] + 'Numbers.txt', 'w', encoding='utf-8')
        int_text_str = " ".join(int_text)
        fw.write(int_text_str)
        fw.close()

if __name__ == '__main__':
    raw_data_path = 'G:/数据集/Microsoft/RawTrain/'
    # get_hex_test(raw_data_path)
    hex_text_path = 'G:/数据集/Microsoft/RunningOutput/hex_text/'
    index_path = 'G:/数据集/Microsoft/RunningOutput/wordDic/hex_text_index.json'
    # get_text_dic(hex_text_path,index_path)
    hex_text_to_int(hex_text_path,index_path)

    # import Mic_Mal_Classify.classifyingFunctions as cc
    # cc.load_data(maxlen=15000, num_words=10000, numOrHex=True)

